name: Android Local Build

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - debug

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          packages: platform-tools,platforms;android-33,build-tools;33.0.2,ndk;25.1.8937393

      - name: Accept licenses
        run: yes | sdkmanager --licenses || true

      - name: Generate Keystore
        id: generate_keystore
        env:
          KEYSTORE_PASSWORD: password
          KEY_ALIAS: upload
          KEY_PASSWORD: password
        run: |
          mkdir -p android/app
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "Using keystore from secrets"
            echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          else
            echo "No keystore secret found, generating a new one"
            keytool -genkeypair -v -keystore android/app/upload-keystore.jks -alias $KEY_ALIAS -keyalg RSA -keysize 2048 -validity 10000 -storepass $KEYSTORE_PASSWORD -keypass $KEY_PASSWORD -dname "CN=GroundSchool,OU=Mobile,O=GroundSchool,L=City,S=State,C=US"
          fi
          echo "keystore_created=true" >> $GITHUB_OUTPUT

      - name: Create Gradle Properties
        if: steps.generate_keystore.outputs.keystore_created == 'true'
        run: |
          cat > android/gradle.properties << EOL
          org.gradle.jvmargs=-Xmx4g -XX:MaxPermSize=2g -XX:+HeapDumpOnOutOfMemoryError
          android.useAndroidX=true
          android.enableJetifier=true
          FLIPPER_VERSION=0.191.0
          UPLOAD_STORE_FILE=upload-keystore.jks
          UPLOAD_KEY_ALIAS=upload
          UPLOAD_STORE_PASSWORD=password
          UPLOAD_KEY_PASSWORD=password
          EOL

      - name: Run Expo Prebuild
        run: npx expo prebuild -p android --no-install

      - name: Build Android
        working-directory: android
        run: |
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            ./gradlew assembleRelease
          else
            ./gradlew assembleDebug
          fi

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ github.event.inputs.build_type }}
          path: |
            android/app/build/outputs/apk/**/*.apk
          retention-days: 7
